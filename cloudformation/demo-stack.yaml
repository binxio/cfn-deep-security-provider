AWSTemplateFormatVersion: '2010-09-09'
Description: Deep Security Demo Configuration
Parameters:
  ForwardEventsToSNS:
    Type: String
    AllowedValues: ['yes', 'no']
    Default: 'no'
    Description: |-
      Forwarding events to AWS SNS requires overriding the current DeepSecurity global system settings.
  StsExternalId:
    Type: String
    Default: 7e4d5aa09fbae428cd726910aa754589

Conditions:
  ForwardEvents: !Equals
    - !Ref 'ForwardEventsToSNS'
    - 'yes'

Resources:
  DeepSecurityAWSCloudAccount:
    Type: Custom::DeepSecurityAWSCloudAccount
    DependsOn: DeepSecurityPolicy
    Properties:
      AWSAccountRequest:
        crossAccountRole:
          roleArn: !GetAtt 'DeepSecurityRole.Arn'
          externalId: !Ref StsExternalId
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-deep-security-provider'

  DeepSecurityRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref 'DeepSecurityPolicy'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::147995105371:root
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:
                  - !Ref 'StsExternalId'

  DeepSecurityPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DeepSecurityPolicy
      Description: TrendMicro DeepSecurity access policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: '1'
            Effect: Allow
            Action:
              - ec2:DescribeRegions
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeTags
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - iam:ListAccountAliases
            Resource:
              - '*'
          - Sid: '2'
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:GetRolePolicy
            Resource:
              - arn:aws:iam::*:role/DeepSecurity*
          - Sid: '3'
            Effect: Allow
            Action:
              - workspaces:DescribeWorkspaces
              - workspaces:DescribeWorkspaceDirectories
              - workspaces:DescribeWorkspaceBundles
              - workspaces:DescribeTags
            Resource:
              - '*'
  Policy:
    Type: Custom::DeepSecurityPolicy
    Properties:
      Value:
        name: My Managed Policy
        parentID: '{{lookup "policy" "Linux Server"}}'
        firewall:
          state: 'inherited'
          ruleIDs:
            - '{{lookup "firewallRule" "FTP Server"}}'
            - '{{lookup "firewallRule" "SMTP Server"}}'
        intrusionPrevention: 
          state: 'inherited'
          ruleIDs:
            - '{{lookup "intrusionPreventionRule" "Digium Asterisk RTP Comfort Noise Frame Processing Denial Of Service"}}'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-deep-security-provider'

  FirewallRule:
    Type: Custom::DeepSecurityFirewallRule
    Properties:
      Value:
        name: RDP Server
        description: Allow incoming traffic to an RDP Server
        action: allow
        priority: '0'
        direction: incoming
        frameType: ip
        frameNumber: 2048
        frameNot: false
        protocol: tcp
        protocolNot: false
        sourceIPType: any
        sourceIPNot: false
        sourceMACType: any
        sourceMACNot: false
        sourcePortType: any
        sourcePortNot: false
        destinationIPType: any
        destinationIPNot: false
        destinationMACType: any
        destinationMACNot: false
        destinationPortType: port-list
        destinationPortListID: !Ref RDPPortList
        destinationPortNot: false
        anyFlags: true
        logDisabled: false
        includePacketData: false
        alertEnabled: false
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-deep-security-provider'

  RDPPortList:
    Type: Custom::DeepSecurityPortList
    Properties:
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-deep-security-provider'
      Value:
       name: My Remote Desktop
       description: Ports for accessing a machine using remote desktop/terminal services
       items:
         - '3389 # Remote Desktop'

  GrantSNSInvokePermissionForDataDogEventForwarder:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deep-security-datadog-event-forwarder'
      Principal: sns.amazonaws.com
      SourceArn: !Ref SNSTopic

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: DeepSecurityEvents
      TopicName: DeepSecurityEvents
      Subscription:
        - Endpoint: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deep-security-datadog-event-forwarder'
          Protocol: 'lambda'

  DeepSecurityUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: DeepSecurityEventPublisher
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                  - sns:GetTopicAttributes
                  - sns:ConfirmSubscription
                  - sns:Subscribe
                Resource:
                  - !Ref 'SNSTopic'
              - Effect: Allow
                Action:
                  - sns:Unsubscribe
                  - sns:GetSubscriptionAttributes
                Resource:
                  - '*'
      UserName: deep_security_event_publisher

  DeepSecurityAccessKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'DeepSecurityUser'

  SystemSetting:
    Condition: ForwardEvents
    Type: Custom::DeepSecuritySystemSetting
    ##
    ## Beware! Although modeled as a Resource, DeepSecuritySystemSetting
    ## is a global variable. It will override the current setting, and will not undo
    ## when deleted.
    ##
    Properties:
      Value:
        platformSettingEventForwardingSnsAccessKey:
          value: !Ref 'DeepSecurityAccessKeys'
        platformSettingEventForwardingSnsSecretKey:
          value: !GetAtt 'DeepSecurityAccessKeys.SecretAccessKey'
        platformSettingEventForwardingSnsTopicArn:
          value: !Ref 'SNSTopic'
        platformSettingEventForwardingSnsAdvancedConfigEnabled:
          value: 'false'
        platformSettingEventForwardingSnsEnabled:
          value: 'true'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-deep-security-provider'
